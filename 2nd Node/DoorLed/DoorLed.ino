#include <Servo.h>
Servo myservo;

#include <ESP8266WiFi.h>
#include <WiFiClientSecureAxTLS.h> //กรณีข้ึน Error ใหเ้อาบรรทดัน้ีออก
// Config connect WiFi
#define WIFI_SSID "Admin-Wifi-2.4GHz"
#define WIFI_PASSWORD "seam2448860"
// Line config
#define LINE_TOKEN "9dm1RQ7McZiavFOWLodg8ihFMUcwwTkBwc5kwPtP84X"

String message = "Please Open The Door!!";


int banana = 0;
int i = 0;
int R0nad = 0;

#include <Wire.h>
#include <SH1106.h>

SH1106 display(0x3c, D1, D2);

#define width 64
#define height 64
#define TRIG_PIN D7
#define ECHO_PIN D6 
#define led D0
#define sw D5

unsigned long previousTime = 0;
int Start = 0;
int setTime = 5;
int r0und = 0;
int pos = 90;

static unsigned char BT[] = {
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 
  0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x3F, 0xF8, 0x03, 0x00, 0x00, 
  0x00, 0x00, 0xE0, 0x01, 0x80, 0x0F, 0x00, 0x00, 0x00, 0x00, 0x78, 0xA0, 
  0x86, 0x3C, 0x00, 0x00, 0x00, 0x00, 0x3C, 0xFE, 0x7C, 0x76, 0x00, 0x00, 
  0x00, 0x00, 0x87, 0x2D, 0x60, 0xE3, 0x00, 0x00, 0x00, 0x80, 0xE2, 0x01, 
  0x00, 0xC5, 0x01, 0x00, 0x00, 0xC0, 0x51, 0xE0, 0x0F, 0x1E, 0x03, 0x00, 
  0x00, 0xC0, 0x38, 0x0C, 0x71, 0x30, 0x06, 0x00, 0x00, 0x60, 0x16, 0xC7, 
  0xE2, 0xD1, 0x0D, 0x00, 0x00, 0xB0, 0xCE, 0x38, 0x1C, 0x42, 0x0E, 0x00, 
  0x00, 0x28, 0x23, 0x90, 0x09, 0x04, 0x1B, 0x00, 0x00, 0x98, 0x30, 0x90, 
  0x09, 0x88, 0x29, 0x00, 0x00, 0x0C, 0x29, 0x90, 0x09, 0x10, 0x32, 0x00, 
  0x00, 0x8C, 0x28, 0xD0, 0x0B, 0x28, 0x33, 0x00, 0x00, 0x4C, 0x24, 0x50, 
  0x0A, 0x20, 0x67, 0x00, 0x00, 0xE6, 0x24, 0x90, 0x0B, 0x48, 0x66, 0x00, 
  0x00, 0x0E, 0x52, 0xF8, 0x3F, 0x5E, 0x62, 0x00, 0x00, 0x6E, 0x8E, 0xF7, 
  0xCF, 0x61, 0x44, 0x00, 0x00, 0x06, 0x02, 0xEA, 0x97, 0xC0, 0xC0, 0x00, 
  0x00, 0x06, 0x02, 0xDE, 0xBB, 0xC0, 0xC0, 0x00, 0x00, 0x26, 0x02, 0x42, 
  0xA1, 0xC0, 0xC4, 0x00, 0x00, 0x66, 0x02, 0x42, 0xA0, 0xC0, 0xC4, 0x00, 
  0x00, 0xDE, 0x02, 0xEA, 0xA8, 0xC0, 0xDB, 0x00, 0x00, 0x76, 0x02, 0x3A, 
  0x8F, 0xC0, 0xCA, 0x00, 0x00, 0x76, 0x06, 0xFF, 0xFF, 0x61, 0x4E, 0x00, 
  0x00, 0x06, 0x52, 0xFE, 0x7F, 0x5A, 0x60, 0x00, 0x00, 0x06, 0x24, 0xBE, 
  0x7C, 0x4C, 0x60, 0x00, 0x00, 0x0C, 0x24, 0xFE, 0xFF, 0xA0, 0x60, 0x00, 
  0x00, 0xCC, 0x29, 0xFE, 0x7F, 0x60, 0x33, 0x00, 0x00, 0xCC, 0x28, 0xFE, 
  0xFF, 0x90, 0x30, 0x00, 0x00, 0x18, 0x31, 0xFF, 0xFF, 0x89, 0x31, 0x00, 
  0x00, 0x38, 0xA3, 0xFF, 0xFF, 0x45, 0x19, 0x00, 0x00, 0x30, 0xC7, 0x38, 
  0x18, 0xE2, 0x14, 0x00, 0x00, 0x60, 0x0C, 0x45, 0xA6, 0x51, 0x0C, 0x00, 
  0x00, 0xE0, 0x38, 0x8E, 0x61, 0x39, 0x06, 0x00, 0x00, 0x40, 0x69, 0xF0, 
  0x1F, 0x0C, 0x03, 0x00, 0x00, 0x80, 0xF2, 0x01, 0x0C, 0x8E, 0x01, 0x00, 
  0x00, 0x00, 0x85, 0x16, 0xF0, 0xE2, 0x00, 0x00, 0x00, 0x00, 0x1E, 0x7E, 
  0x7C, 0x70, 0x00, 0x00, 0x00, 0x00, 0x38, 0x50, 0x2C, 0x3C, 0x00, 0x00, 
  0x00, 0x00, 0xF0, 0x01, 0x00, 0x0F, 0x00, 0x00, 0x00, 0x00, 0xC0, 0x1F, 
  0xF0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x7F, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0xC0, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
  };

void setup() {
    myservo.attach(D8);
    myservo.write(90);
    
  
  Serial.begin(9600);
    
    display.init();
    display.clear();

    pinMode(sw, INPUT_PULLUP);
    pinMode (led,OUTPUT);
    pinMode(ECHO_PIN, INPUT);  
    pinMode(TRIG_PIN, OUTPUT);

    display.drawXbm(31 ,5 ,width,height,BT);
    display.display();

    WiFi.mode(WIFI_STA);
  // connect to wifi.
  WiFi.begin(WIFI_SSID, WIFI_PASSWORD);
  Serial.print("connecting");
  while (WiFi.status() != WL_CONNECTED) {
  Serial.print(".");
  delay(500);
  }
  Serial.println();
  Serial.print("connected: ");
  Serial.println(WiFi.localIP());
}

void(* resetFunc) (void) = 0;

void loop() {



    //Set font
    display.setFont(ArialMT_Plain_10);

      //หา dist
    digitalWrite(TRIG_PIN, HIGH);                
    delayMicroseconds(12);
    digitalWrite(TRIG_PIN, LOW);    
    unsigned long duration = pulseIn(ECHO_PIN, HIGH);  
    unsigned long dist = (0.034*duration)/2 ; 
    Serial.print("Ultrasonic ");
    Serial.print(dist);
    Serial.println(" cm");
    delay(200);

    






if (dist < 20) {
  display.clear();
          display.drawString(30, 25, String(".:WELCOME:."));
          display.display();

      for ( pos ; pos < 180 ; pos++) {
        myservo.write(pos);
        delay (15);
      }
      
      delay(1000);
     }
     
      if ((dist > 25) && (R0nad == 0)) {
         for (pos ; pos > 90 ; pos--) {
            myservo.write(pos);
            delay (15);
                  }
        }
     
     if (digitalRead(sw) == LOW) {
                for (pos ; pos > 0 ; pos--) {
                myservo.write(pos);
                delay (15);
  }
                  i++;
                R0nad++;
                Serial.println(i);
     }


  if (i >= 2) {
                for (pos ; pos < 90 ; pos++) {
                myservo.write(pos);
                delay (15);
  }
                i = 0;
                R0nad = 0;
  }











  
    


        unsigned long showTime = millis();

    //OLED 
        if (banana == 1) {
          display.clear();
          display.drawString(15, 25, String("Please wear a helmet."));
          display.display();
          Line_Notify(message);
          delay(5000);
          resetFunc();
          }
          
        if ((dist < 20) && ((showTime - previousTime) / 1000 != 0)) {
          display.clear();
          display.drawString(30, 25, String(".:WELCOME:."));
          display.display();
          }

        if ((showTime - previousTime) / 1000 == 1) {
          display.clear();
          }
    
    if ((dist < 20) && (r0und == 0)) {
      Start++;
      previousTime = showTime;
      Serial.println("Start...");
      r0und = 1;
    }

    if (dist > 25) {
      Start = 0;
      r0und = 0;
      display.clear();
      display.drawXbm(31 ,5 ,width,height,BT);
      display.display();
    }
      

      if(Start >= 1){
      Serial.print("setTime: ");
      Serial.print(setTime);
      Serial.print("   showTime: ");
      Serial.print(showTime); 
      Serial.print("   previousTime: ");
      Serial.print(previousTime); 
      Serial.print("   Time: ");
      Serial.println((showTime - previousTime) / 1000);
      Serial.println(" ");
            
            if((showTime - previousTime) / 1000 >= setTime)
            {
          Start = 0;
          digitalWrite(led, HIGH);
          Serial.println("LED ON");
          display.clear();
          banana = 1;
            }

                    }
    }

    void Line_Notify(String message) {
axTLS::WiFiClientSecure client; //กรณีข้ึน Error ให้ลบ axTLS:: ขา้งหนา้ทิ้ง
if (!client.connect("notify-api.line.me", 443)) {
Serial.println("connection failed");
return;
}
String req = "";
req += "POST /api/notify HTTP/1.1\r\n";
req += "Host: notify-api.line.me\r\n";
req += "Authorization: Bearer " + String(LINE_TOKEN) + "\r\n";
req += "Cache-Control: no-cache\r\n";
req += "User-Agent: ESP8266\r\n";
req += "Connection: close\r\n";
req += "Content-Type: application/x-www-form-urlencoded\r\n";
req += "Content-Length: " + String(String("message=" + message).length()) + "\r\n";
req += "\r\n";
req += "message=" + message;
// Serial.println(req);
client.print(req);
delay(20);
// Serial.println("-------------");
while(client.connected()) {
String line = client.readStringUntil('\n');
if (line == "\r") {
break;
}
//Serial.println(line);
}
// Serial.println("-------------");
}
